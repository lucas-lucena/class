// Basic Exercises involving Pairs

type Pair <A: Type, B: Type> {
  new(fst: A, snd: B)
}

// Example:
// Swaps the elements of a pair
swap<A: Type, B: Type>(pair: Pair<A,B>): Pair<B,A>
  case pair {
    new: Pair.new<B, A>(pair.snd, pair.fst)
  }

// Returns the first element of a pair
first<A: Type, B: Type>(pair: Pair<A,B>): A
  case pair {
    new: pair.fst
  }

// Returns the second element of a pair
second<A: Type, B: Type>(pair: Pair<A,B>): B
  case pair {
    new: pair.snd
  }

// Applies a function to both elements of a Pair
map<A: Type, B: Type>(fn: A -> B, pair: Pair<A,A>): Pair<B,B>
  case pair {
    new: Pair.new<B, B>(fn(pair.fst), fn(pair.snd))
  }

// inc(a: Nat): Nat // <-Aqui jogas, e savio! 
//   Nat.succ(a)
// ex_03:_
//   map!!(inc,Pair.new!!(1,1))
  // map<Nat,Nat>(inc,Pair.new<Nat, Nat>(1,1))
  // let pair = Pair.new<Nat,Nat>(1,2)
  // second<Nat,Nat>(pair)
  // first!!(Pair.new!!(100,2))